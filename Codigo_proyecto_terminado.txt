from machine import Pin as pin
import network, urequests
from utime import sleep
from hcsr04 import HCSR04
import json

led1=pin (15,pin.OUT)
led2=pin (2,pin.OUT)
hc04=HCSR04(trigger_pin=4, echo_pin=5)

def conectaWifi(red, password):
    
    
 global miRed
 miRed = network.WLAN(network.STA_IF)
 if not miRed.isconnected():
        miRed.active(True)
        miRed.connect(red, password)
        print("conectado a la red", red + "...")
        timeout = time.time()
        while not miRed.isconnected():
            if (time.ticks_diff (time.time (), timeout) >10):
                return False
 return True
if conectaWifi("FAMILIA BYD", "3125153133byd"):
    print ("conexion exitosa!")
    print('Datos de la red (IP/netmask/gw/DNS):', miRed.ifconfig())
    url= "https://maker.ifttt.com/trigger/Se han ingresado llaves/with/key/PLg9HMiGMwJ56ECUCc9Qz?"
    url2="https://maker.ifttt.com/trigger/Ingreso_llaves/with/key/PLg9HMiGMwJ56ECUCc9Qz?"
    url3="https://api.thingspeak.com/update?api_key=OE9FBV7TSYE6P7L9"
    while True:
     sleep(1)
     distancia= hc04.distance_cm()
     print ("Distancia = {:2.2f}cm".format(distancia))
     
     if distancia <= 63.00:
          print("IngresÃ³ llaves")
           
          respuesta = urequests.get(url+"&value1="+str(int(distancia))) 
          print(respuesta.text)
          print (respuesta.status_code)
          respuesta.close ()
          
          respuesta = urequests.get(url2+"&value1="+str(int(distancia))) 
          print(respuesta.text)
          print (respuesta.status_code)
          respuesta.close ()
          
          respuesta = urequests.get(url3+"&field1="+str(int(distancia)))
          print(respuesta.text)
          print (respuesta.status_code)
          respuesta.close ()
          
          led1.value(1)
          led2.value(0)
     else:
          print("No hay llaves insertadas")
          led2.value(1)
          led1.value(0)